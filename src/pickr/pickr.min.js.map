{
    "version": 3,
    "sources": [
        "webpack:///webpack/universalModuleDefinition",
        "webpack:///webpack/bootstrap",
        "webpack:///./src/js/utils/utils.js",
        "webpack:///./src/js/utils/color.js",
        "webpack:///./src/js/utils/hsvacolor.js",
        "webpack:///./src/js/libs/moveable.js",
        "webpack:///./src/js/libs/selectable.js",
        "webpack:///./src/js/libs/nanopop.js",
        "webpack:///./src/js/pickr.js",
        "webpack:///./src/js/template.js"
    ],
    "names": [
        "root",
        "factory",
        "exports",
        "module",
        "define",
        "amd",
        "window",
        "installedModules",
        "__webpack_require__",
        "moduleId",
        "i",
        "l",
        "modules",
        "call",
        "m",
        "c",
        "d",
        "name",
        "getter",
        "o",
        "Object",
        "defineProperty",
        "enumerable",
        "get",
        "r",
        "Symbol",
        "toStringTag",
        "value",
        "t",
        "mode",
        "__esModule",
        "ns",
        "create",
        "key",
        "bind",
        "n",
        "object",
        "property",
        "prototype",
        "hasOwnProperty",
        "p",
        "s",
        "on",
        "eventListener",
        "off",
        "method",
        "elements",
        "events",
        "fn",
        "options",
        "HTMLCollection",
        "NodeList",
        "Array",
        "from",
        "isArray",
        "el",
        "ev",
        "capture",
        "slice",
        "arguments",
        "createElementFromString",
        "html",
        "div",
        "document",
        "createElement",
        "innerHTML",
        "trim",
        "firstElementChild",
        "removeAttribute",
        "getAttribute",
        "createFromTemplate",
        "str",
        "resolve",
        "element",
        "base",
        "con",
        "subtree",
        "child",
        "children",
        "arr",
        "sub",
        "push",
        "keys",
        "length",
        "eventPath",
        "evt",
        "path",
        "composedPath",
        "target",
        "parentElement",
        "resolveElement",
        "val",
        "Element",
        "split",
        "reduce",
        "pv",
        "cv",
        "ci",
        "a",
        "querySelector",
        "shadowRoot",
        "adjustableInputNumbers",
        "mapper",
        "v",
        "handleScroll",
        "e",
        "inc",
        "Number",
        "shiftKey",
        "ctrlKey",
        "deltaY",
        "index",
        "selectionStart",
        "replace",
        "focus",
        "setSelectionRange",
        "preventDefault",
        "dispatchEvent",
        "Event",
        "passive",
        "min",
        "max",
        "floor",
        "round",
        "Math",
        "hsvToRgb",
        "h",
        "f",
        "q",
        "mod",
        "hsvToHsl",
        "rgbToHsv",
        "g",
        "b",
        "minVal",
        "maxVal",
        "delta",
        "dr",
        "dg",
        "db",
        "cmykToHsv",
        "y",
        "k",
        "hslToHsv",
        "hexToHsv",
        "hex",
        "match",
        "map",
        "parseInt",
        "parseToHSVA",
        "toLowerCase",
        "ctx",
        "getContext",
        "fillStyle",
        "standardizeColor",
        "regex",
        "cmyk",
        "rgba",
        "hsla",
        "hsva",
        "hexa",
        "numarize",
        "array",
        "test",
        "undefined",
        "invalid",
        "type",
        "exec",
        "alphaValid",
        "values",
        "join",
        "raw",
        "substring",
        "HSVaColor",
        "original",
        "next",
        "precision",
        "toFixed",
        "that",
        "toHSVA",
        "toString",
        "toHSLA",
        "toRGBA",
        "toCMYK",
        "rgb",
        "hsvToCmyk",
        "toHEXA",
        "padStart",
        "hsvToHex",
        "alpha",
        "toUpperCase",
        "clone",
        "clamp",
        "Moveable",
        "opt",
        "assign",
        "lock",
        "onchange",
        "onstop",
        "_keyboard",
        "activeElement",
        "wrapper",
        "up",
        "right",
        "down",
        "left",
        "xm",
        "ym",
        "update",
        "cache",
        "x",
        "startsWith",
        "_tapstart",
        "_",
        "_tapstop",
        "_tapmove",
        "getBoundingClientRect",
        "touch",
        "touches",
        "clientX",
        "clientY",
        "width",
        "top",
        "height",
        "style",
        "offsetWidth",
        "offsetHeight",
        "cx",
        "cy",
        "trigger",
        "destroy",
        "Selectable",
        "className",
        "onTap",
        "forEach",
        "classList",
        "Nanopop",
        "reference",
        "padding",
        "vBehaviour",
        "start",
        "middle",
        "end",
        "hBehaviour",
        "bottom",
        "getInfo",
        "pos",
        "cached",
        "position",
        "variant",
        "isVertical",
        "useFallback",
        "rb",
        "eb",
        "positions",
        "vertical",
        "variants",
        "leastApplied",
        "findFittingValue",
        "positionVariants",
        "targetProperty",
        "elSize",
        "winSize",
        "posChar",
        "wantedValue",
        "wantedValueAsString",
        "vaType",
        "vbType",
        "vaValue",
        "vbValue",
        "innerHeight",
        "innerWidth",
        "Pickr",
        "constructor",
        "init",
        "save",
        "hide",
        "show",
        "clear",
        "change",
        "changestop",
        "cancel",
        "swatchselect",
        "this",
        "appClass",
        "theme",
        "useAsButton",
        "disabled",
        "comparison",
        "closeOnScroll",
        "outputPrecision",
        "lockOpacity",
        "autoReposition",
        "container",
        "components",
        "interaction",
        "strings",
        "swatches",
        "inline",
        "sliders",
        "default",
        "defaultRepresentation",
        "adjustableNumbers",
        "showAlways",
        "closeWithKey",
        "includes",
        "preview",
        "opacity",
        "hue",
        "palette",
        "_preBuild",
        "_buildComponents",
        "_bindEvents",
        "_finalBuild",
        "color",
        "addSwatch",
        "button",
        "app",
        "_root",
        "_nanopop",
        "setAttribute",
        "requestAnimationFrame",
        "cb",
        "setColor",
        "_rePositioningPicker",
        "_representation",
        "setColorRepresentation",
        "_initializingActive",
        "_emit",
        "lo",
        "hidden",
        "input",
        "int",
        "find",
        "add",
        "contains",
        "buildPickr",
        "appendChild",
        "removeChild",
        "parent",
        "nextSibling",
        "insertBefore",
        "remove",
        "parentNode",
        "replaceChild",
        "disable",
        "transition",
        "lastColor",
        "inst",
        "cs",
        "repeat",
        "so",
        "sh",
        "getColor",
        "_color",
        "_lastColor",
        "picker",
        "currentColor",
        "_recalc",
        "_updateOutput",
        "cssRGBaString",
        "background",
        "_swatchColors",
        "slider",
        "backgroundColor",
        "selectable",
        "_components",
        "eventBindings",
        "_clearColor",
        "setHSVA",
        "applyColor",
        "result",
        "stopImmediatePropagation",
        "ck",
        "isOpen",
        "code",
        "some",
        "ranges",
        "step",
        "range",
        "getColorRepresentation",
        "nv",
        "toPrecision",
        "timeout",
        "setTimeout",
        "rs",
        "clearTimeout",
        "_eventBindings",
        "silent",
        "_parseLocalColor",
        "alphaMakesAChange",
        "event",
        "args",
        "_eventListener",
        "callBacks",
        "indexOf",
        "splice",
        "removeSwatch",
        "swatchColor",
        "destroyAndRemove",
        "recalc",
        "string",
        "utype",
        "click",
        "getSelectedColor",
        "getRoot",
        "enable",
        "utils",
        "libs",
        "version"
    ],
    "mappings": "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",
    "file": "pickr.min.js",
    "sourcesContent": [
        "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn ",
        " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n",
        "/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    for (const el of elements) {\r\n        for (const ev of events) {\r\n            el[method](ev, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Removes an attribute from a HTMLElement and returns the value.\r\n * @param el\r\n * @param name\r\n * @return {string}\r\n */\r\nexport function removeAttribute(el, name) {\r\n    const value = el.getAttribute(name);\r\n    el.removeAttribute(name);\r\n    return value;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a ':ref' attribute will be saved in a object (which will be returned)\r\n * where the value of ':ref' is the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a ':obj' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the ':arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\nexport function createFromTemplate(str) {\r\n\r\n    // Recursive function to resolve template\r\n    function resolve(element, base = {}) {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, ':obj');\r\n        const key = removeAttribute(element, ':ref');\r\n        const subtree = con ? (base[con] = {}) : base;\r\n\r\n        // Check and save element\r\n        key && (base[key] = element);\r\n        for (const child of Array.from(element.children)) {\r\n            const arr = removeAttribute(child, ':arr');\r\n            const sub = resolve(child, arr ? {} : subtree);\r\n\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = []))\r\n                    .push(Object.keys(sub).length ? sub : child);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Resolves a HTMLElement by query.\r\n * @param val\r\n * @returns {null|Document|Element}\r\n */\r\nexport function resolveElement(val) {\r\n    if (val instanceof Element) {\r\n        return val;\r\n    } else if (typeof val === 'string') {\r\n        return val.split(/>>/g).reduce((pv, cv, ci, a) => {\r\n            pv = pv.querySelector(cv);\r\n            return ci < a.length - 1 ? pv.shadowRoot : pv;\r\n        }, document);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param mapper\r\n */\r\nexport function adjustableInputNumbers(el, mapper = v => v) {\r\n\r\n    function handleScroll(e) {\r\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\r\n\r\n        let index = 0;\r\n        let off = el.selectionStart;\r\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\r\n\r\n            // Check if number is in cursor range and increase it\r\n            if (i <= off && i + v.length >= off) {\r\n                off = i;\r\n                return mapper(Number(v), inc, index);\r\n            }\r\n\r\n            index++;\r\n            return v;\r\n        });\r\n\r\n        el.focus();\r\n        el.setSelectionRange(off, off);\r\n\r\n        // Prevent default and trigger input event\r\n        e.preventDefault();\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}\r\n",
        "// Shorthands\r\nconst {min, max, floor, round} = Math;\r\n\r\n/**\r\n * Tries to convert a color name to rgb/a hex representation\r\n * @param name\r\n * @returns {string | CanvasGradient | CanvasPattern}\r\n */\r\nfunction standardizeColor(name) {\r\n\r\n    // Since invalid color's will be parsed as black, filter them out\r\n    if (name.toLowerCase() === 'black') {\r\n        return '#000';\r\n    }\r\n\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    ctx.fillStyle = name;\r\n    return ctx.fillStyle === '#000' ? null : ctx.fillStyle;\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    const i = floor(h);\r\n\r\n    const f = h - i;\r\n    const p = v * (1 - s);\r\n    const q = v * (1 - f * s);\r\n    const t = v * (1 - (1 - f) * s);\r\n\r\n    const mod = i % 6;\r\n    const r = [v, q, p, p, t, v][mod];\r\n    const g = [t, v, v, q, p, p][mod];\r\n    const b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v =>\r\n        round(v).toString(16).padStart(2, '0')\r\n    );\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    let k, c, m, y;\r\n\r\n    k = min(1 - r, 1 - g, 1 - b);\r\n\r\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100, v /= 100;\r\n\r\n    const l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n\r\n    let h, s, v;\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        const dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        const dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        const db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100;\r\n    m /= 100;\r\n    y /= 100;\r\n    k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100;\r\n    l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    const ns = (2 * s / (l + s)) * 100;\r\n    const v = (l + s) * 100;\r\n    return [h, ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSVA(str) {\r\n\r\n    // Check if string is a color-name\r\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)/i,\r\n        rgba: /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^((hsla)|hsl)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^((hsva)|hsv)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hexa: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    invalid: for (const type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str)))\r\n            continue;\r\n\r\n        // match[2] does only contain a truly value if rgba, hsla, or hsla got matched\r\n        const alphaValid = a => (!!match[2] === (typeof a === 'number'));\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                const [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100)\r\n                    break invalid;\r\n\r\n                return {values: cmykToHsv(c, m, y, k), type};\r\n            }\r\n            case 'rgba': {\r\n                const [, , , r, g, b, a] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1 || !alphaValid(a))\r\n                    break invalid;\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], a, type};\r\n            }\r\n            case 'hexa': {\r\n                let [, hex] = match;\r\n\r\n                if (hex.length === 4 || hex.length === 3) {\r\n                    hex = hex.split('').map(v => v + v).join('');\r\n                }\r\n\r\n                const raw = hex.substring(0, 6);\r\n                let a = hex.substring(6);\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                a = a ? (parseInt(a, 16) / 255) : undefined;\r\n\r\n                return {values: [...hexToHsv(raw), a], a, type};\r\n            }\r\n            case 'hsla': {\r\n                const [, , , h, s, l, a] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1 || !alphaValid(a))\r\n                    break invalid;\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], a, type};\r\n            }\r\n            case 'hsva': {\r\n                const [, , , h, s, v, a] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1 || !alphaValid(a))\r\n                    break invalid;\r\n\r\n                return {values: [h, s, v, a], a, type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}\r\n",
        "import {hsvToCmyk, hsvToHex, hsvToHsl, hsvToRgb} from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n    const mapper = (original, next) => (precision = -1) => {\r\n        return next(~precision ? original.map(v => Number(v.toFixed(precision))) : original);\r\n    };\r\n\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v, that.a];\r\n            hsva.toString = mapper(hsva, arr => `hsva(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = [...hsvToHsl(that.h, that.s, that.v), that.a];\r\n            hsla.toString = mapper(hsla, arr => `hsla(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = [...hsvToRgb(that.h, that.s, that.v), that.a];\r\n            rgba.toString = mapper(rgba, arr => `rgba(${arr[0]}, ${arr[1]}, ${arr[2]}, ${that.a})`);\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\r\n            cmyk.toString = mapper(cmyk, arr => `cmyk(${arr[0]}%, ${arr[1]}%, ${arr[2]}%, ${arr[3]}%)`);\r\n            return cmyk;\r\n        },\r\n\r\n        toHEXA() {\r\n            const hex = hsvToHex(that.h, that.s, that.v);\r\n\r\n            // Check if alpha channel make sense, convert it to 255 number space, convert\r\n            // to hex and pad it with zeros if needet.\r\n            const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\r\n                .toString(16)\r\n                .toUpperCase().padStart(2, '0');\r\n\r\n            alpha && hex.push(alpha);\r\n            hex.toString = () => `#${hex.join('').toUpperCase()}`;\r\n            return hex;\r\n        },\r\n\r\n        clone: () => HSVaColor(that.h, that.s, that.v, that.a)\r\n    };\r\n\r\n    return that;\r\n}\r\n",
        "import * as _ from '../utils/utils';\r\n\r\nconst clamp = v => Math.max(Math.min(v, 1), 0);\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lock: null,\r\n            onchange: () => 0,\r\n            onstop: () => 0\r\n        }, opt),\r\n\r\n        _keyboard(e) {\r\n            const {type, key} = e;\r\n\r\n            // Check to see if the Movable is focused and then move it based on arrow key inputs\r\n            // for improved accessibility\r\n            if (document.activeElement === options.wrapper) {\r\n                const {lock} = that.options;\r\n                const up = key === 'ArrowUp';\r\n                const right = key === 'ArrowRight';\r\n                const down = key === 'ArrowDown';\r\n                const left = key === 'ArrowLeft';\r\n\r\n                if (type === 'keydown' && (up || right || down || left)) {\r\n                    let xm = 0;\r\n                    let ym = 0;\r\n\r\n                    if (lock === 'v') {\r\n                        xm = (up || right) ? 1 : -1;\r\n                    } else if (lock === 'h') {\r\n                        xm = (up || right) ? -1 : 1;\r\n                    } else {\r\n                        ym = up ? -1 : (down ? 1 : 0);\r\n                        xm = left ? -1 : (right ? 1 : 0);\r\n                    }\r\n\r\n                    that.update(\r\n                        clamp(that.cache.x + (0.01 * xm)),\r\n                        clamp(that.cache.y + (0.01 * ym))\r\n                    );\r\n                    e.preventDefault();\r\n                } else if (key.startsWith('Arrow')) {\r\n                    that.options.onstop();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        },\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options: {lock}, cache} = that;\r\n            const {element, wrapper} = options;\r\n            const b = wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (lock !== 'h') {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (lock !== 'v') {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            const cx = clamp(x / wrapper.offsetWidth);\r\n            const cy = clamp(y / wrapper.offsetHeight);\r\n\r\n            switch (lock) {\r\n                case 'v':\r\n                    return options.onchange(cx);\r\n                case 'h':\r\n                    return options.onchange(cy);\r\n                default:\r\n                    return options.onchange(cx, cy);\r\n            }\r\n        },\r\n\r\n        _tapstop() {\r\n            that.options.onstop();\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\r\n\r\n            if (that.options.lock === 'h') {\r\n                y = x;\r\n            }\r\n\r\n            that._tapmove({\r\n                clientX: left + width * x,\r\n                clientY: top + height * y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart, _keyboard} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    _.on(document, ['keydown', 'keyup'], _keyboard);\r\n\r\n\r\n    return that;\r\n}\r\n",
        "import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n",
        "/**\n * Micro positioning-engine\n * @param el\n * @param reference\n * @param pos\n * @param padding\n * @returns {{update(): void}}\n * @constructor\n */\nexport default function Nanopop({el, reference, padding = 8}) {\n\n    // Positioning priorities for variants\n    const vBehaviour = {\n        start: 'sme',\n        middle: 'mse',\n        end: 'ems'\n    };\n\n    // Positioning priorities for general alignment\n    const hBehaviour = {\n        top: 'tbrl',\n        right: 'rltb',\n        bottom: 'btrl',\n        left: 'lrbt'\n    };\n\n    const getInfo = ((cache = {}) => (pos, cached = cache[pos]) => {\n\n        // Return cached value if possible\n        if (cached) {\n            return cached;\n        }\n\n        // Extract position and variant\n        // top-start -> top is \"position\" and \"start\" is the variant\n        const [position, variant = 'middle'] = pos.split('-');\n\n        // It's vertical if top or bottom is used as position\n        const isVertical = (position === 'top' || position === 'bottom');\n\n        // Cache value and return\n        return cache[pos] = {\n            position,\n            variant,\n            isVertical\n        };\n    })();\n\n    return {\n\n        /**\n         * Re-aligns the element\n         * @param pos Position string\n         * @param useFallback If everything fails the element may be centered on the the entire screen ignoring the reference\n         */\n        update(pos, useFallback = false) {\n            const {position, variant, isVertical} = getInfo(pos);\n            const rb = reference.getBoundingClientRect();\n            const eb = el.getBoundingClientRect();\n\n            /**\n             * Holds coordinates of top, left, bottom and right alignment\n             */\n            const positions = vertical => vertical ? {\n                t: rb.top - eb.height - padding,\n                b: rb.bottom + padding\n            } : {\n                r: rb.right + padding,\n                l: rb.left - eb.width - padding\n            };\n\n            /**\n             * Holds corresponding variants (start, middle, end)\n             */\n            const variants = vertical => vertical ? {\n                s: rb.left + rb.width - eb.width,\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\n                e: rb.left\n            } : {\n                s: rb.bottom - eb.height,\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\n                e: rb.bottom - rb.height\n            };\n\n            // Holds the last working positions\n            const leastApplied = {};\n\n            /**\n             * Applies a position, example precedure with top-start: it'll\n             * first try to satify the variant \"start\", if this fails it'll try\n             * the remaining variants (in this case \"middle\" and \"end\")\n             * @param positions Array of positions in the order they should be applied\n             * @param positionVariants Variants, the first should be the one initially wanted\n             * @param targetProperty The target property, defines if this is a horizontal or vertical aligment\n             * @returns a value for targetProperty or null if none fits\n             */\n            const findFittingValue = (positions, positionVariants, targetProperty) => {\n                const vertical = targetProperty === 'top';\n                const elSize = vertical ? eb.height : eb.width;\n                const winSize = window[vertical ? 'innerHeight' : 'innerWidth'];\n\n                for (const posChar of positions) {\n                    const wantedValue = positionVariants[posChar];\n                    const wantedValueAsString = leastApplied[targetProperty] = `${wantedValue}px`;\n\n                    if (wantedValue > 0 && (wantedValue + elSize) < winSize) {\n                        return wantedValueAsString;\n                    }\n                }\n\n                return null;\n            };\n\n\n            for (const vertical of [isVertical, !isVertical]) {\n\n                /**\n                 * va and vb both define where the element is positioned (top, bottom, left, right)\n                 * and it's corresponding variant (start, middle, end). Since we're \"rotating\" the element\n                 * to ensure to (hopefully) find at least one fitting position the values need to be\n                 * defined during runtime.\n                 */\n                const vaType = vertical ? 'top' : 'left';\n                const vbType = vertical ? 'left' : 'top';\n\n                // Actual values for top and bottom\n                const vaValue = findFittingValue(hBehaviour[position], positions(vertical), vaType);\n                const vbValue = findFittingValue(vBehaviour[variant], variants(vertical), vbType);\n\n                // Both values work, apply them\n                if (vaValue && vbValue) {\n                    el.style[vbType] = vbValue;\n                    el.style[vaType] = vaValue;\n                    return;\n                }\n            }\n\n            // It failed to find a non-clipping position, if fallback is enable it'll use it - otherwise the last\n            // calculated values will be used.\n            if (useFallback) {\n                el.style.top = `${(window.innerHeight - eb.height) / 2}px`;\n                el.style.left = `${(window.innerWidth - eb.width) / 2}px`;\n            } else {\n                el.style.left = leastApplied.left;\n                el.style.top = leastApplied.top;\n            }\n        }\n    };\n}\n",
        "import * as _        from './utils/utils';\nimport {version}     from '../../package';\nimport {parseToHSVA} from './utils/color';\nimport {HSVaColor}   from './utils/hsvacolor';\nimport Moveable      from './libs/moveable';\nimport Selectable    from './libs/selectable';\nimport Nanopop       from './libs/nanopop';\nimport buildPickr    from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // If the current color value should be recalculated\n    _recalc = true;\n\n    // Positioning engine and DOM-Tree\n    _nanopop = null;\n    _root = null;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        init: [],\n        save: [],\n        hide: [],\n        show: [],\n        clear: [],\n        change: [],\n        changestop: [],\n        cancel: [],\n        swatchselect: []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            theme: 'classic',\n            useAsButton: false,\n            padding: 8,\n            disabled: false,\n            comparison: true,\n            closeOnScroll: false,\n            outputPrecision: 0,\n            lockOpacity: false,\n            autoReposition: true,\n            container: 'body',\n            components: {\n                interaction: {}\n            },\n\n            strings: {},\n            swatches: null,\n            inline: false,\n            sliders: null,\n\n            default: '#42445a',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, components, theme, sliders, lockOpacity, padding} = opt;\n\n        if (['nano', 'monolith'].includes(theme) && !sliders) {\n            opt.sliders = 'h';\n        }\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.opacity = (!lockOpacity && opacity);\n        components.palette = palette || preview || opacity || hue;\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initialize positioning engine\n        const {button, app} = this._root;\n        this._nanopop = Nanopop({\n            reference: button,\n            padding,\n            el: app\n        });\n\n        // Initialize accessibility\n        button.setAttribute('role', 'button');\n        button.setAttribute('aria-label', 'toggle color picker dialog');\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            if (!app.offsetWidth && app.parentElement !== opt.container) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Resolve elements\n        for (const type of ['el', 'container']) {\n            opt[type] = _.resolveElement(opt[type]);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        opt.container.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        opt.container.removeChild(root.root);\n\n        if (opt.inline) {\n            const parent = opt.el.parentElement;\n\n            if (opt.el.nextSibling) {\n                parent.insertBefore(root.app, opt.el.nextSibling);\n            } else {\n                parent.appendChild(root.app);\n            }\n        } else {\n            opt.container.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        } else if (opt.inline) {\n            opt.el.remove();\n        }\n\n        // Check if it should be immediatly disabled\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const cs = this.options.components;\n        const sliders = (inst.options.sliders || 'v').repeat(2);\n        const [so, sh] = sliders.match(/^[vh]+$/g) ? sliders : [];\n\n        // Re-assign if null\n        const getColor = () =>\n            this._color || (this._color = this._lastColor.clone());\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(x, y) {\n                    if (!cs.palette) return;\n\n                    const color = getColor();\n                    const {_root, options} = inst;\n                    const {lastColor, currentColor} = _root.preview;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n\n                        // Calculate saturation based on the position\n                        color.s = x * 100;\n\n                        // Calculate the value\n                        color.v = 100 - y * 100;\n\n                        // Prevent falling under zero\n                        color.v < 0 ? color.v = 0 : 0;\n                        inst._updateOutput();\n                    }\n\n                    // Set picker and gradient color\n                    const cssRGBaString = color.toRGBA().toString(0);\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${color.a}), transparent),\n                        linear-gradient(to left, hsla(${color.h}, 100%, 50%, ${color.a}), rgba(255, 255, 255, ${color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        // If the user changes the color, remove the cleared icon\n                        _root.button.classList.remove('clear');\n                    } else if (!options.useAsButton && !inst._lastColor) {\n\n                        // Apply color to both the last and current color since the current state is cleared\n                        lastColor.style.color = cssRGBaString;\n                    }\n\n                    // Check if there's a swatch which color matches the current one\n                    const hexa = color.toHEXA().toString();\n                    for (const {el, color} of inst._swatchColors) {\n                        el.classList[hexa === color.toHEXA().toString() ? 'add' : 'remove']('pcr-active');\n                    }\n\n                    // Change current color\n                    currentColor.style.color = cssRGBaString;\n                }\n            }),\n\n            hue: Moveable({\n                lock: sh === 'v' ? 'h' : 'v',\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(v) {\n                    if (!cs.hue || !cs.palette) return;\n                    const color = getColor();\n\n                    // Calculate hue\n                    if (inst._recalc) {\n                        color.h = v * 360;\n                    }\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lock: so === 'v' ? 'h' : 'v',\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(v) {\n                    if (!cs.opacity || !cs.palette) return;\n                    const color = getColor();\n\n                    // Calculate opacity\n                    if (inst._recalc) {\n                        color.a = Math.round(v * 1e2) / 100;\n                    }\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${color.a})`;\n                    components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._recalc && inst._updateOutput();\n                }\n            })\n        };\n\n        this._components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on([\n                _root.interaction.cancel,\n                _root.preview.lastColor\n            ], 'click', () => {\n                this._emit('cancel', this);\n                this.setHSVA(...(this._lastColor || this._color).toHSVA(), true);\n            }),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // User input\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['focus', 'blur'], e => {\n                this._recalc = e.type === 'blur';\n                this._recalc && this._updateOutput();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            const ranges = {\n                rgba: [255, 255, 255, 1],\n                hsva: [360, 100, 100, 1],\n                hsla: [360, 100, 100, 1],\n                cmyk: [100, 100, 100, 100]\n            };\n\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\n\n                if (range) {\n                    const max = range[index];\n\n                    // Calculate next reasonable number\n                    const nv = o + (max >= 100 ? step * 1000 : step);\n\n                    // Apply range of zero up to max, fix floating-point issues\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\n                }\n\n                return o;\n            });\n        }\n\n        if (options.autoReposition && !options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n\n                        if (options.closeOnScroll) {\n                            that.hide();\n                        }\n\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n        const {options} = this;\n\n        // No repositioning needed if inline\n        if (!options.inline) {\n            this._nanopop.update(options.position, !this._recalc);\n        }\n    }\n\n    _updateOutput() {\n        const {_root, _color, options} = this;\n\n        // Check if component is present\n        if (_root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${_root.interaction.type().getAttribute('data-type')}`;\n            _root.interaction.result.value = typeof _color[method] === 'function' ?\n                _color[method]().toString(options.outputPrecision) : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive && this._recalc) {\n            this._emit('change', _color);\n        }\n    }\n\n    _clearColor(silent = false) {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        this._lastColor = null;\n        if (!this._initializingActive && !silent) {\n\n            // Fire listener\n            this._emit('save', null);\n            this._emit('clear', this);\n        }\n    }\n\n    _parseLocalColor(str) {\n        const {values, type, a} = parseToHSVA(str);\n        const {lockOpacity} = this.options;\n        const alphaMakesAChange = a !== undefined && a !== 1;\n\n        // If no opacity is applied, add undefined at the very end which gets\n        // set to 1 in setHSVA\n        if (values && values.length === 3) {\n            values[3] = undefined;\n        }\n\n        return {\n            values: (!values || (lockOpacity && alphaMakesAChange)) ? null : values,\n            type\n        };\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = this._parseLocalColor(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const color = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const el = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${color.toRGBA().toString(0)}\" aria-label=\"color swatch\"/>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(el);\n            _swatchColors.push({el, color});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(el, 'click', () => {\n                    this.setHSVA(...color.toHSVA(), true);\n                    this._emit('swatchselect', color);\n                    this._emit('change', color);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n        const swatchColor = this._swatchColors[index];\n\n        // Check swatch data\n        if (swatchColor) {\n            const {el} = swatchColor;\n\n            // Remove HTML child and swatch data\n            this._root.swatches.removeChild(el);\n            this._swatchColors.splice(index, 1);\n            return true;\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString(0);\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n\n        return this;\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n\n        Object.keys(this._components)\n            .forEach(key => this._components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n        const {root, app} = this._root;\n\n        // Remove element\n        if (root.parentElement) {\n            root.parentElement.removeChild(root);\n        }\n\n        // remove .pcr-app\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        Object.keys(this)\n            .forEach(key => this[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        this._emit('hide', this);\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n\n        if (!this.options.disabled) {\n            this._root.app.classList.add('visible');\n            this._rePositioningPicker();\n            this._emit('show', this);\n        }\n\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n\n        // Update slider and palette\n        const {hue, opacity, palette} = this._components;\n        hue.update((h / 360));\n        opacity.update(a);\n        palette.update(s / 100, 1 - (v / 100));\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        // Update output if recalculation is enabled\n        if (recalc) {\n            this._updateOutput();\n        }\n\n        // Restore old state\n        this._recalc = recalc;\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor(silent);\n            return true;\n        }\n\n        const {values, type} = this._parseLocalColor(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type') === utype);\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            // Update color (fires 'save' event if silent is 'false')\n            if (!this.setHSVA(...values, silent)) {\n                return false;\n            }\n\n            // Update representation (fires 'change' event)\n            return this.setColorRepresentation(utype);\n        }\n\n        return false;\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options\n            .find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * Returns the currently selected color.\n     * @returns {{a, toHSVA, toHEXA, s, v, h, clone, toCMYK, toHSLA, toRGBA}}\n     */\n    getSelectedColor() {\n        return this._lastColor;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Expose pickr utils\nPickr.utils = _;\n\n// Expose libraries for easier integration in things build on top of it\nPickr.libs = {\n    HSVaColor,\n    Moveable,\n    Nanopop,\n    Selectable\n};\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Assign version and export\nPickr.version = version;\nexport default Pickr;\n",
        "import * as _ from './utils/utils';\r\n\r\nexport default ({components: c, strings: s, useAsButton, inline, appClass, theme, lockOpacity: lo}) => {\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div :ref=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" :ref=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div :ref=\"app\" class=\"pcr-app ${appClass || ''}\" data-theme=\"${theme}\" ${inline ? 'style=\"position: unset\"' : ''} aria-label=\"color picker dialog\" role=\"form\">\r\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\r\n            <div :obj=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\r\n              <button type=\"button\" :ref=\"lastColor\" class=\"pcr-last-color\" aria-label=\"use previous color\"></button>\r\n              <div :ref=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"palette\" class=\"pcr-color-palette\">\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"palette\" class=\"pcr-palette\" tabindex=\"0\" aria-label=\"color selection area\" role=\"listbox\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-hue pcr-slider\" tabindex=\"0\" aria-label=\"hue selection slider\" role=\"slider\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-opacity pcr-slider\" tabindex=\"0\" aria-label=\"opacity selection slider\" role=\"slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${c.palette ? '' : 'pcr-last'}\" :ref=\"swatches\"></div> \r\n\r\n          <div :obj=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\r\n            <input :ref=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\r\n\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"${lo ? 'HEX' : 'HEXA'}\" type=\"button\" ${hidden(c.interaction.hex)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"${lo ? 'RGB' : 'RGBA'}\" type=\"button\" ${hidden(c.interaction.rgba)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"${lo ? 'HSL' : 'HSLA'}\" type=\"button\" ${hidden(c.interaction.hsla)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"${lo ? 'HSV' : 'HSVA'}\" type=\"button\" ${hidden(c.interaction.hsva)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\r\n\r\n            <input :ref=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)} aria-label=\"save and exit\">\r\n            <input :ref=\"cancel\" class=\"pcr-cancel\" value=\"${s.cancel || 'Cancel'}\" type=\"button\" ${hidden(c.interaction.cancel)} aria-label=\"cancel and exit\">\r\n            <input :ref=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)} aria-label=\"clear and exit\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Create method to find currenlty active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n}\r\n"
    ],
    "sourceRoot": ""
}
